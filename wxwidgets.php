<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('wxwidgets')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_wxwidgets.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('wxwidgets.so')) return;
    } else {
      if (!dl('wxwidgets.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class wxwidgets {
	static function wxEntryStart($argc,$argv) {
		return wxEntryStart($argc,$argv);
	}

	static function wxEntryCleanup() {
		wxEntryCleanup();
	}

	static function wxUninitialize() {
		wxUninitialize();
	}

	const wxTheApp = wxTheApp;

	static function wxHandleFatalExceptions($doIt=true) {
		return wxHandleFatalExceptions($doIt);
	}

	static function wxInitialize($argc=null,$argv=null) {
		switch (func_num_args()) {
		case 0: $r=wxInitialize(); break;
		case 1: $r=wxInitialize($argc); break;
		default: $r=wxInitialize($argc,$argv);
		}
		return $r;
	}

	static function wxWakeUpIdle() {
		wxWakeUpIdle();
	}

	static function wxYield() {
		return wxYield();
	}

	static function wxSafeYield($win=null,$onlyIfNeeded=false) {
		return wxSafeYield($win,$onlyIfNeeded);
	}

	static function wxEntry($argc,$argv) {
		return wxEntry($argc,$argv);
	}

	static function wxExit() {
		wxExit();
	}

	const wxSHOW_EFFECT_NONE = 0;

	const wxSHOW_EFFECT_ROLL_TO_LEFT = wxSHOW_EFFECT_ROLL_TO_LEFT;

	const wxSHOW_EFFECT_ROLL_TO_RIGHT = wxSHOW_EFFECT_ROLL_TO_RIGHT;

	const wxSHOW_EFFECT_ROLL_TO_TOP = wxSHOW_EFFECT_ROLL_TO_TOP;

	const wxSHOW_EFFECT_ROLL_TO_BOTTOM = wxSHOW_EFFECT_ROLL_TO_BOTTOM;

	const wxSHOW_EFFECT_SLIDE_TO_LEFT = wxSHOW_EFFECT_SLIDE_TO_LEFT;

	const wxSHOW_EFFECT_SLIDE_TO_RIGHT = wxSHOW_EFFECT_SLIDE_TO_RIGHT;

	const wxSHOW_EFFECT_SLIDE_TO_TOP = wxSHOW_EFFECT_SLIDE_TO_TOP;

	const wxSHOW_EFFECT_SLIDE_TO_BOTTOM = wxSHOW_EFFECT_SLIDE_TO_BOTTOM;

	const wxSHOW_EFFECT_BLEND = wxSHOW_EFFECT_BLEND;

	const wxSHOW_EFFECT_EXPAND = wxSHOW_EFFECT_EXPAND;

	const wxWINDOW_VARIANT_NORMAL = 0;

	const wxWINDOW_VARIANT_SMALL = wxWINDOW_VARIANT_SMALL;

	const wxWINDOW_VARIANT_MINI = wxWINDOW_VARIANT_MINI;

	const wxWINDOW_VARIANT_LARGE = wxWINDOW_VARIANT_LARGE;

	const wxWINDOW_VARIANT_MAX = wxWINDOW_VARIANT_MAX;

	static function wxFindWindowAtPointer($pt) {
		$r=wxFindWindowAtPointer($pt);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	static function wxGetActiveWindow() {
		$r=wxGetActiveWindow();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	static function wxGetTopLevelParent($window) {
		$r=wxGetTopLevelParent($window);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	const wxUSER_ATTENTION_INFO = 1;

	const wxUSER_ATTENTION_ERROR = 2;

	const wxFULLSCREEN_NOMENUBAR = wxFULLSCREEN_NOMENUBAR;

	const wxFULLSCREEN_NOTOOLBAR = wxFULLSCREEN_NOTOOLBAR;

	const wxFULLSCREEN_NOSTATUSBAR = wxFULLSCREEN_NOSTATUSBAR;

	const wxFULLSCREEN_NOBORDER = wxFULLSCREEN_NOBORDER;

	const wxFULLSCREEN_NOCAPTION = wxFULLSCREEN_NOCAPTION;

	const wxFULLSCREEN_ALL = wxFULLSCREEN_ALL;

	const wxFRAME_NO_TASKBAR = wxFRAME_NO_TASKBAR;

	const wxFRAME_TOOL_WINDOW = wxFRAME_TOOL_WINDOW;

	const wxFRAME_FLOAT_ON_PARENT = wxFRAME_FLOAT_ON_PARENT;
}

/* PHP Proxy Classes */
class wxInitializer {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($argc,$argv) {
		if (is_resource($argc) && get_resource_type($argc) === '_p_wxInitializer') {
			$this->_cPtr=$argc;
			return;
		}
		$this->_cPtr=new_wxInitializer($argc,$argv);
	}

	function IsOk() {
		return wxInitializer_IsOk($this->_cPtr);
	}
}

class wxAppConsole {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'argv') return wxAppConsole_argv_set($this->_cPtr,$value);
		if ($var === 'argc') return wxAppConsole_argc_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('wxAppConsole_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'argv') return wxAppConsole_argv_get($this->_cPtr);
		if ($var === 'argc') return wxAppConsole_argc_get($this->_cPtr);
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function MainLoop() {
		return wxAppConsole_MainLoop($this->_cPtr);
	}

	function ExitMainLoop() {
		wxAppConsole_ExitMainLoop($this->_cPtr);
	}

	function FilterEvent($event) {
		return wxAppConsole_FilterEvent($this->_cPtr,$event);
	}

	function GetMainLoop() {
		return wxAppConsole_GetMainLoop($this->_cPtr);
	}

	function HandleEvent($handler,$func,$event) {
		wxAppConsole_HandleEvent($this->_cPtr,$handler,$func,$event);
	}

	function UsesEventLoop() {
		return wxAppConsole_UsesEventLoop($this->_cPtr);
	}

	function ProcessPendingEvents() {
		wxAppConsole_ProcessPendingEvents($this->_cPtr);
	}

	function DeletePendingEvents() {
		wxAppConsole_DeletePendingEvents($this->_cPtr);
	}

	function HasPendingEvents() {
		return wxAppConsole_HasPendingEvents($this->_cPtr);
	}

	function SuspendProcessingOfPendingEvents() {
		wxAppConsole_SuspendProcessingOfPendingEvents($this->_cPtr);
	}

	function ResumeProcessingOfPendingEvents() {
		wxAppConsole_ResumeProcessingOfPendingEvents($this->_cPtr);
	}

	function ScheduleForDestruction($object) {
		wxAppConsole_ScheduleForDestruction($this->_cPtr,$object);
	}

	function IsScheduledForDestruction($object) {
		return wxAppConsole_IsScheduledForDestruction($this->_cPtr,$object);
	}

	function Yield($onlyIfNeeded=false) {
		return wxAppConsole_Yield($this->_cPtr,$onlyIfNeeded);
	}

	static function SetInstance($app) {
		wxAppConsole_SetInstance($app);
	}

	static function GetInstance() {
		$r=wxAppConsole_GetInstance();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxAppConsole($r);
		}
		return $r;
	}

	static function IsMainLoopRunning() {
		return wxAppConsole_IsMainLoopRunning();
	}

	function OnAssertFailure($file,$line,$func,$cond,$msg) {
		wxAppConsole_OnAssertFailure($this->_cPtr,$file,$line,$func,$cond,$msg);
	}

	function OnCmdLineError($parser) {
		return wxAppConsole_OnCmdLineError($this->_cPtr,$parser);
	}

	function OnCmdLineHelp($parser) {
		return wxAppConsole_OnCmdLineHelp($this->_cPtr,$parser);
	}

	function OnCmdLineParsed($parser) {
		return wxAppConsole_OnCmdLineParsed($this->_cPtr,$parser);
	}

	function OnEventLoopEnter($loop) {
		wxAppConsole_OnEventLoopEnter($this->_cPtr,$loop);
	}

	function OnEventLoopExit($loop) {
		wxAppConsole_OnEventLoopExit($this->_cPtr,$loop);
	}

	function OnExceptionInMainLoop() {
		return wxAppConsole_OnExceptionInMainLoop($this->_cPtr);
	}

	function OnExit() {
		return wxAppConsole_OnExit($this->_cPtr);
	}

	function OnFatalException() {
		wxAppConsole_OnFatalException($this->_cPtr);
	}

	function OnInit() {
		return wxAppConsole_OnInit($this->_cPtr);
	}

	function OnInitCmdLine($parser) {
		wxAppConsole_OnInitCmdLine($this->_cPtr,$parser);
	}

	function OnRun() {
		return wxAppConsole_OnRun($this->_cPtr);
	}

	function OnUnhandledException() {
		wxAppConsole_OnUnhandledException($this->_cPtr);
	}

	function GetAppDisplayName() {
		return wxAppConsole_GetAppDisplayName($this->_cPtr);
	}

	function GetAppName() {
		return wxAppConsole_GetAppName($this->_cPtr);
	}

	function GetClassName() {
		return wxAppConsole_GetClassName($this->_cPtr);
	}

	function GetTraits() {
		return wxAppConsole_GetTraits($this->_cPtr);
	}

	function GetVendorDisplayName() {
		return wxAppConsole_GetVendorDisplayName($this->_cPtr);
	}

	function GetVendorName() {
		return wxAppConsole_GetVendorName($this->_cPtr);
	}

	function SetAppDisplayName($name) {
		wxAppConsole_SetAppDisplayName($this->_cPtr,$name);
	}

	function SetAppName($name) {
		wxAppConsole_SetAppName($this->_cPtr,$name);
	}

	function SetClassName($name) {
		wxAppConsole_SetClassName($this->_cPtr,$name);
	}

	function SetVendorDisplayName($name) {
		wxAppConsole_SetVendorDisplayName($this->_cPtr,$name);
	}

	function SetVendorName($name) {
		wxAppConsole_SetVendorName($this->_cPtr,$name);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_wxAppConsole') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_wxAppConsole();
	}
}

class wxApp extends wxAppConsole {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		wxAppConsole::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return wxAppConsole::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return wxAppConsole::__get($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_wxApp') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_wxApp();
	}

	function GetDisplayMode() {
		return wxApp_GetDisplayMode($this->_cPtr);
	}

	function GetExitOnFrameDelete() {
		return wxApp_GetExitOnFrameDelete($this->_cPtr);
	}

	function GetLayoutDirection() {
		return wxApp_GetLayoutDirection($this->_cPtr);
	}

	function GetUseBestVisual() {
		return wxApp_GetUseBestVisual($this->_cPtr);
	}

	function GetTopWindow() {
		$r=wxApp_GetTopWindow($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function IsActive() {
		return wxApp_IsActive($this->_cPtr);
	}

	function SafeYield($win,$onlyIfNeeded) {
		return wxApp_SafeYield($this->_cPtr,$win,$onlyIfNeeded);
	}

	function SafeYieldFor($win,$eventsToProcess) {
		return wxApp_SafeYieldFor($this->_cPtr,$win,$eventsToProcess);
	}

	function SetDisplayMode($info) {
		return wxApp_SetDisplayMode($this->_cPtr,$info);
	}

	function SetExitOnFrameDelete($flag) {
		wxApp_SetExitOnFrameDelete($this->_cPtr,$flag);
	}

	function SetNativeTheme($theme) {
		return wxApp_SetNativeTheme($this->_cPtr,$theme);
	}

	function SetTopWindow($window) {
		wxApp_SetTopWindow($this->_cPtr,$window);
	}

	function SetUseBestVisual($flag,$forceTrueColour=false) {
		wxApp_SetUseBestVisual($this->_cPtr,$flag,$forceTrueColour);
	}
}

class wxVisualAttributes {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'wxVisualAttributes_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('wxVisualAttributes_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'wxVisualAttributes_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_wxVisualAttributes') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_wxVisualAttributes();
	}
}

class wxWindow {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($parent=null,$id=null,$pos=null,$size=null,$style=null,$name=null) {
		if (is_resource($parent) && get_resource_type($parent) === '_p_wxWindow') {
			$this->_cPtr=$parent;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_wxWindow(); break;
		case 1: $this->_cPtr=new_wxWindow($parent); break;
		case 2: $this->_cPtr=new_wxWindow($parent,$id); break;
		case 3: $this->_cPtr=new_wxWindow($parent,$id,$pos); break;
		case 4: $this->_cPtr=new_wxWindow($parent,$id,$pos,$size); break;
		case 5: $this->_cPtr=new_wxWindow($parent,$id,$pos,$size,$style); break;
		default: $this->_cPtr=new_wxWindow($parent,$id,$pos,$size,$style,$name);
		}
	}

	function Create($parent,$id,$pos=null,$size=null,$style=0,$name=null) {
		switch (func_num_args()) {
		case 2: $r=wxWindow_Create($this->_cPtr,$parent,$id); break;
		case 3: $r=wxWindow_Create($this->_cPtr,$parent,$id,$pos); break;
		case 4: case 5: $r=wxWindow_Create($this->_cPtr,$parent,$id,$pos,$size,$style); break;
		default: $r=wxWindow_Create($this->_cPtr,$parent,$id,$pos,$size,$style,$name);
		}
		return $r;
	}

	function AcceptsFocus() {
		return wxWindow_AcceptsFocus($this->_cPtr);
	}

	function AcceptsFocusFromKeyboard() {
		return wxWindow_AcceptsFocusFromKeyboard($this->_cPtr);
	}

	function AcceptsFocusRecursively() {
		return wxWindow_AcceptsFocusRecursively($this->_cPtr);
	}

	function HasFocus() {
		return wxWindow_HasFocus($this->_cPtr);
	}

	function SetCanFocus($canFocus) {
		wxWindow_SetCanFocus($this->_cPtr,$canFocus);
	}

	function SetFocus() {
		wxWindow_SetFocus($this->_cPtr);
	}

	function SetFocusFromKbd() {
		wxWindow_SetFocusFromKbd($this->_cPtr);
	}

	function AddChild($child) {
		wxWindow_AddChild($this->_cPtr,$child);
	}

	function DestroyChildren() {
		return wxWindow_DestroyChildren($this->_cPtr);
	}

	function FindWindow($id_or_name) {
		$r=wxWindow_FindWindow($this->_cPtr,$id_or_name);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_wxWindow': return new wxWindow($r);
		default: return new wxWindow($r);
		}
	}

	function GetChildren() {
		return wxWindow_GetChildren($this->_cPtr);
	}

	function RemoveChild($child) {
		wxWindow_RemoveChild($this->_cPtr,$child);
	}

	function GetGrandParent() {
		$r=wxWindow_GetGrandParent($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function GetNextSibling() {
		$r=wxWindow_GetNextSibling($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function GetParent() {
		$r=wxWindow_GetParent($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function GetPrevSibling() {
		$r=wxWindow_GetPrevSibling($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function IsDescendant($win) {
		return wxWindow_IsDescendant($this->_cPtr,$win);
	}

	function Reparent($newParent) {
		return wxWindow_Reparent($this->_cPtr,$newParent);
	}

	function AlwaysShowScrollbars($hflag=true,$vflag=true) {
		wxWindow_AlwaysShowScrollbars($this->_cPtr,$hflag,$vflag);
	}

	function GetScrollPos($orientation) {
		return wxWindow_GetScrollPos($this->_cPtr,$orientation);
	}

	function GetScrollRange($orientation) {
		return wxWindow_GetScrollRange($this->_cPtr,$orientation);
	}

	function GetScrollThumb($orientation) {
		return wxWindow_GetScrollThumb($this->_cPtr,$orientation);
	}

	function CanScroll($orient) {
		return wxWindow_CanScroll($this->_cPtr,$orient);
	}

	function HasScrollbar($orient) {
		return wxWindow_HasScrollbar($this->_cPtr,$orient);
	}

	function IsScrollbarAlwaysShown($orient) {
		return wxWindow_IsScrollbarAlwaysShown($this->_cPtr,$orient);
	}

	function ScrollLines($lines) {
		return wxWindow_ScrollLines($this->_cPtr,$lines);
	}

	function ScrollPages($pages) {
		return wxWindow_ScrollPages($this->_cPtr,$pages);
	}

	function ScrollWindow($dx,$dy,$rect=null) {
		wxWindow_ScrollWindow($this->_cPtr,$dx,$dy,$rect);
	}

	function LineUp() {
		return wxWindow_LineUp($this->_cPtr);
	}

	function LineDown() {
		return wxWindow_LineDown($this->_cPtr);
	}

	function PageUp() {
		return wxWindow_PageUp($this->_cPtr);
	}

	function PageDown() {
		return wxWindow_PageDown($this->_cPtr);
	}

	function SetScrollPos($orientation,$pos,$refresh=true) {
		wxWindow_SetScrollPos($this->_cPtr,$orientation,$pos,$refresh);
	}

	function SetScrollbar($orientation,$position,$thumbSize,$range,$refresh=true) {
		wxWindow_SetScrollbar($this->_cPtr,$orientation,$position,$thumbSize,$range,$refresh);
	}

	function CacheBestSize($size) {
		wxWindow_CacheBestSize($this->_cPtr,$size);
	}

	function ClientToWindowSize($size) {
		return wxWindow_ClientToWindowSize($this->_cPtr,$size);
	}

	function WindowToClientSize($size) {
		return wxWindow_WindowToClientSize($this->_cPtr,$size);
	}

	function Fit() {
		wxWindow_Fit($this->_cPtr);
	}

	function FitInside() {
		wxWindow_FitInside($this->_cPtr);
	}

	function GetBestSize() {
		return wxWindow_GetBestSize($this->_cPtr);
	}

	function GetBestHeight($width) {
		return wxWindow_GetBestHeight($this->_cPtr,$width);
	}

	function GetBestWidth($height) {
		return wxWindow_GetBestWidth($this->_cPtr,$height);
	}

	function GetClientSize($width=null,$height=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetClientSize($this->_cPtr); break;
		case 1: $r=wxWindow_GetClientSize($this->_cPtr,$width); break;
		default: $r=wxWindow_GetClientSize($this->_cPtr,$width,$height);
		}
		return $r;
	}

	function GetEffectiveMinSize() {
		return wxWindow_GetEffectiveMinSize($this->_cPtr);
	}

	function GetMaxClientSize() {
		return wxWindow_GetMaxClientSize($this->_cPtr);
	}

	function GetMaxSize() {
		return wxWindow_GetMaxSize($this->_cPtr);
	}

	function GetMinClientSize() {
		return wxWindow_GetMinClientSize($this->_cPtr);
	}

	function GetMinSize() {
		return wxWindow_GetMinSize($this->_cPtr);
	}

	function GetMinWidth() {
		return wxWindow_GetMinWidth($this->_cPtr);
	}

	function GetMinHeight() {
		return wxWindow_GetMinHeight($this->_cPtr);
	}

	function GetMaxWidth() {
		return wxWindow_GetMaxWidth($this->_cPtr);
	}

	function GetMaxHeight() {
		return wxWindow_GetMaxHeight($this->_cPtr);
	}

	function GetSize($width=null,$height=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetSize($this->_cPtr); break;
		case 1: $r=wxWindow_GetSize($this->_cPtr,$width); break;
		default: $r=wxWindow_GetSize($this->_cPtr,$width,$height);
		}
		return $r;
	}

	function GetVirtualSize($width=null,$height=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetVirtualSize($this->_cPtr); break;
		case 1: $r=wxWindow_GetVirtualSize($this->_cPtr,$width); break;
		default: $r=wxWindow_GetVirtualSize($this->_cPtr,$width,$height);
		}
		return $r;
	}

	function GetBestVirtualSize() {
		return wxWindow_GetBestVirtualSize($this->_cPtr);
	}

	function GetWindowBorderSize() {
		return wxWindow_GetWindowBorderSize($this->_cPtr);
	}

	function InformFirstDirection($direction,$size,$availableOtherDir) {
		return wxWindow_InformFirstDirection($this->_cPtr,$direction,$size,$availableOtherDir);
	}

	function InvalidateBestSize() {
		wxWindow_InvalidateBestSize($this->_cPtr);
	}

	function PostSizeEvent() {
		wxWindow_PostSizeEvent($this->_cPtr);
	}

	function PostSizeEventToParent() {
		wxWindow_PostSizeEventToParent($this->_cPtr);
	}

	function SendSizeEvent($flags=0) {
		wxWindow_SendSizeEvent($this->_cPtr,$flags);
	}

	function SendSizeEventToParent($flags=0) {
		wxWindow_SendSizeEventToParent($this->_cPtr,$flags);
	}

	function SetClientSize($width_or_size_or_rect,$height=null) {
		switch (func_num_args()) {
		case 1: wxWindow_SetClientSize($this->_cPtr,$width_or_size_or_rect); break;
		default: wxWindow_SetClientSize($this->_cPtr,$width_or_size_or_rect,$height);
		}
	}

	function SetContainingSizer($sizer) {
		wxWindow_SetContainingSizer($this->_cPtr,$sizer);
	}

	function SetInitialSize($size=null) {
		switch (func_num_args()) {
		case 0: wxWindow_SetInitialSize($this->_cPtr); break;
		default: wxWindow_SetInitialSize($this->_cPtr,$size);
		}
	}

	function SetMaxClientSize($size) {
		wxWindow_SetMaxClientSize($this->_cPtr,$size);
	}

	function SetMaxSize($size) {
		wxWindow_SetMaxSize($this->_cPtr,$size);
	}

	function SetMinClientSize($size) {
		wxWindow_SetMinClientSize($this->_cPtr,$size);
	}

	function SetMinSize($size) {
		wxWindow_SetMinSize($this->_cPtr,$size);
	}

	function SetSize($x_or_rect_or_size_or_width,$y_or_height=null,$width=null,$height=null,$sizeFlags=null) {
		switch (func_num_args()) {
		case 1: wxWindow_SetSize($this->_cPtr,$x_or_rect_or_size_or_width); break;
		case 2: wxWindow_SetSize($this->_cPtr,$x_or_rect_or_size_or_width,$y_or_height); break;
		case 3: wxWindow_SetSize($this->_cPtr,$x_or_rect_or_size_or_width,$y_or_height,$width); break;
		case 4: wxWindow_SetSize($this->_cPtr,$x_or_rect_or_size_or_width,$y_or_height,$width,$height); break;
		default: wxWindow_SetSize($this->_cPtr,$x_or_rect_or_size_or_width,$y_or_height,$width,$height,$sizeFlags);
		}
	}

	function SetSizeHints($minSize_or_minW,$maxSize_or_minH=null,$incSize_or_maxW=null,$maxH=null,$incW=null,$incH=null) {
		switch (func_num_args()) {
		case 1: wxWindow_SetSizeHints($this->_cPtr,$minSize_or_minW); break;
		case 2: wxWindow_SetSizeHints($this->_cPtr,$minSize_or_minW,$maxSize_or_minH); break;
		case 3: wxWindow_SetSizeHints($this->_cPtr,$minSize_or_minW,$maxSize_or_minH,$incSize_or_maxW); break;
		case 4: wxWindow_SetSizeHints($this->_cPtr,$minSize_or_minW,$maxSize_or_minH,$incSize_or_maxW,$maxH); break;
		case 5: wxWindow_SetSizeHints($this->_cPtr,$minSize_or_minW,$maxSize_or_minH,$incSize_or_maxW,$maxH,$incW); break;
		default: wxWindow_SetSizeHints($this->_cPtr,$minSize_or_minW,$maxSize_or_minH,$incSize_or_maxW,$maxH,$incW,$incH);
		}
	}

	function SetVirtualSize($width_or_size,$height=null) {
		switch (func_num_args()) {
		case 1: wxWindow_SetVirtualSize($this->_cPtr,$width_or_size); break;
		default: wxWindow_SetVirtualSize($this->_cPtr,$width_or_size,$height);
		}
	}

	function Center($dir=null) {
		switch (func_num_args()) {
		case 0: wxWindow_Center($this->_cPtr); break;
		default: wxWindow_Center($this->_cPtr,$dir);
		}
	}

	function CenterOnParent($dir=null) {
		switch (func_num_args()) {
		case 0: wxWindow_CenterOnParent($this->_cPtr); break;
		default: wxWindow_CenterOnParent($this->_cPtr,$dir);
		}
	}

	function Centre($direction=null) {
		switch (func_num_args()) {
		case 0: wxWindow_Centre($this->_cPtr); break;
		default: wxWindow_Centre($this->_cPtr,$direction);
		}
	}

	function CentreOnParent($direction=null) {
		switch (func_num_args()) {
		case 0: wxWindow_CentreOnParent($this->_cPtr); break;
		default: wxWindow_CentreOnParent($this->_cPtr,$direction);
		}
	}

	function GetPosition($x=null,$y=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetPosition($this->_cPtr); break;
		case 1: $r=wxWindow_GetPosition($this->_cPtr,$x); break;
		default: $r=wxWindow_GetPosition($this->_cPtr,$x,$y);
		}
		return $r;
	}

	function GetRect() {
		return wxWindow_GetRect($this->_cPtr);
	}

	function GetScreenPosition($x=null,$y=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetScreenPosition($this->_cPtr); break;
		case 1: $r=wxWindow_GetScreenPosition($this->_cPtr,$x); break;
		default: $r=wxWindow_GetScreenPosition($this->_cPtr,$x,$y);
		}
		return $r;
	}

	function GetScreenRect() {
		return wxWindow_GetScreenRect($this->_cPtr);
	}

	function GetClientAreaOrigin() {
		return wxWindow_GetClientAreaOrigin($this->_cPtr);
	}

	function GetClientRect() {
		return wxWindow_GetClientRect($this->_cPtr);
	}

	function Move($x_or_pt,$y_or_flags=null,$flags=null) {
		switch (func_num_args()) {
		case 1: wxWindow_Move($this->_cPtr,$x_or_pt); break;
		case 2: wxWindow_Move($this->_cPtr,$x_or_pt,$y_or_flags); break;
		default: wxWindow_Move($this->_cPtr,$x_or_pt,$y_or_flags,$flags);
		}
	}

	function SetPosition($pt) {
		wxWindow_SetPosition($this->_cPtr,$pt);
	}

	function ClientToScreen($x_or_pt,$y=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_ClientToScreen($this->_cPtr,$x_or_pt); break;
		default: $r=wxWindow_ClientToScreen($this->_cPtr,$x_or_pt,$y);
		}
		return $r;
	}

	function ConvertDialogToPixels($pt_or_sz) {
		return wxWindow_ConvertDialogToPixels($this->_cPtr,$pt_or_sz);
	}

	function ConvertPixelsToDialog($pt_or_sz) {
		return wxWindow_ConvertPixelsToDialog($this->_cPtr,$pt_or_sz);
	}

	function ScreenToClient($x_or_pt,$y=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_ScreenToClient($this->_cPtr,$x_or_pt); break;
		default: $r=wxWindow_ScreenToClient($this->_cPtr,$x_or_pt,$y);
		}
		return $r;
	}

	function ClearBackground() {
		wxWindow_ClearBackground($this->_cPtr);
	}

	function Freeze() {
		wxWindow_Freeze($this->_cPtr);
	}

	function Thaw() {
		wxWindow_Thaw($this->_cPtr);
	}

	function IsFrozen() {
		return wxWindow_IsFrozen($this->_cPtr);
	}

	function GetBackgroundColour() {
		return wxWindow_GetBackgroundColour($this->_cPtr);
	}

	function GetBackgroundStyle() {
		return wxWindow_GetBackgroundStyle($this->_cPtr);
	}

	function GetCharHeight() {
		return wxWindow_GetCharHeight($this->_cPtr);
	}

	function GetCharWidth() {
		return wxWindow_GetCharWidth($this->_cPtr);
	}

	function GetDefaultAttributes() {
		$r=wxWindow_GetDefaultAttributes($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxVisualAttributes($r);
		}
		return $r;
	}

	function GetFont() {
		return wxWindow_GetFont($this->_cPtr);
	}

	function GetForegroundColour() {
		return wxWindow_GetForegroundColour($this->_cPtr);
	}

	function GetTextExtent($string,$w=null,$h=null,$descent=null,$externalLeading=null,$font=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_GetTextExtent($this->_cPtr,$string); break;
		case 2: $r=wxWindow_GetTextExtent($this->_cPtr,$string,$w); break;
		default: $r=wxWindow_GetTextExtent($this->_cPtr,$string,$w,$h,$descent,$externalLeading,$font);
		}
		return $r;
	}

	function GetUpdateRegion() {
		return wxWindow_GetUpdateRegion($this->_cPtr);
	}

	function GetUpdateClientRect() {
		return wxWindow_GetUpdateClientRect($this->_cPtr);
	}

	function HasTransparentBackground() {
		return wxWindow_HasTransparentBackground($this->_cPtr);
	}

	function Refresh($eraseBackground=true,$rect=null) {
		wxWindow_Refresh($this->_cPtr,$eraseBackground,$rect);
	}

	function RefreshRect($rect,$eraseBackground=true) {
		wxWindow_RefreshRect($this->_cPtr,$rect,$eraseBackground);
	}

	function Update() {
		wxWindow_Update($this->_cPtr);
	}

	function SetBackgroundColour($colour) {
		return wxWindow_SetBackgroundColour($this->_cPtr,$colour);
	}

	function SetBackgroundStyle($style) {
		return wxWindow_SetBackgroundStyle($this->_cPtr,$style);
	}

	function IsTransparentBackgroundSupported($reason=null) {
		return wxWindow_IsTransparentBackgroundSupported($this->_cPtr,$reason);
	}

	function SetFont($font) {
		return wxWindow_SetFont($this->_cPtr,$font);
	}

	function SetForegroundColour($colour) {
		return wxWindow_SetForegroundColour($this->_cPtr,$colour);
	}

	function SetOwnBackgroundColour($colour) {
		wxWindow_SetOwnBackgroundColour($this->_cPtr,$colour);
	}

	function SetOwnFont($font) {
		wxWindow_SetOwnFont($this->_cPtr,$font);
	}

	function SetOwnForegroundColour($colour) {
		wxWindow_SetOwnForegroundColour($this->_cPtr,$colour);
	}

	function SetPalette($pal) {
		wxWindow_SetPalette($this->_cPtr,$pal);
	}

	function ShouldInheritColours() {
		return wxWindow_ShouldInheritColours($this->_cPtr);
	}

	function SetThemeEnabled($enable) {
		wxWindow_SetThemeEnabled($this->_cPtr,$enable);
	}

	function GetThemeEnabled() {
		return wxWindow_GetThemeEnabled($this->_cPtr);
	}

	function CanSetTransparent() {
		return wxWindow_CanSetTransparent($this->_cPtr);
	}

	function SetTransparent($alpha) {
		return wxWindow_SetTransparent($this->_cPtr,$alpha);
	}

	function GetEventHandler() {
		return wxWindow_GetEventHandler($this->_cPtr);
	}

	function HandleAsNavigationKey($event) {
		return wxWindow_HandleAsNavigationKey($this->_cPtr,$event);
	}

	function HandleWindowEvent($event) {
		return wxWindow_HandleWindowEvent($this->_cPtr,$event);
	}

	function ProcessWindowEvent($event) {
		return wxWindow_ProcessWindowEvent($this->_cPtr,$event);
	}

	function ProcessWindowEventLocally($event) {
		return wxWindow_ProcessWindowEventLocally($this->_cPtr,$event);
	}

	function PopEventHandler($deleteHandler=false) {
		return wxWindow_PopEventHandler($this->_cPtr,$deleteHandler);
	}

	function PushEventHandler($handler) {
		wxWindow_PushEventHandler($this->_cPtr,$handler);
	}

	function RemoveEventHandler($handler) {
		return wxWindow_RemoveEventHandler($this->_cPtr,$handler);
	}

	function SetEventHandler($handler) {
		wxWindow_SetEventHandler($this->_cPtr,$handler);
	}

	function SetNextHandler($handler) {
		wxWindow_SetNextHandler($this->_cPtr,$handler);
	}

	function SetPreviousHandler($handler) {
		wxWindow_SetPreviousHandler($this->_cPtr,$handler);
	}

	function GetExtraStyle() {
		return wxWindow_GetExtraStyle($this->_cPtr);
	}

	function GetWindowStyleFlag() {
		return wxWindow_GetWindowStyleFlag($this->_cPtr);
	}

	function GetWindowStyle() {
		return wxWindow_GetWindowStyle($this->_cPtr);
	}

	function HasExtraStyle($exFlag) {
		return wxWindow_HasExtraStyle($this->_cPtr,$exFlag);
	}

	function HasFlag($flag) {
		return wxWindow_HasFlag($this->_cPtr,$flag);
	}

	function SetExtraStyle($exStyle) {
		wxWindow_SetExtraStyle($this->_cPtr,$exStyle);
	}

	function SetWindowStyleFlag($style) {
		wxWindow_SetWindowStyleFlag($this->_cPtr,$style);
	}

	function SetWindowStyle($style) {
		wxWindow_SetWindowStyle($this->_cPtr,$style);
	}

	function ToggleWindowStyle($flag) {
		return wxWindow_ToggleWindowStyle($this->_cPtr,$flag);
	}

	function MoveAfterInTabOrder($win) {
		wxWindow_MoveAfterInTabOrder($this->_cPtr,$win);
	}

	function MoveBeforeInTabOrder($win) {
		wxWindow_MoveBeforeInTabOrder($this->_cPtr,$win);
	}

	function Navigate($flags=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_Navigate($this->_cPtr); break;
		default: $r=wxWindow_Navigate($this->_cPtr,$flags);
		}
		return $r;
	}

	function NavigateIn($flags=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_NavigateIn($this->_cPtr); break;
		default: $r=wxWindow_NavigateIn($this->_cPtr,$flags);
		}
		return $r;
	}

	function Lower() {
		wxWindow_Lower($this->_cPtr);
	}

	function Raise() {
		wxWindow_Raise($this->_cPtr);
	}

	function Hide() {
		return wxWindow_Hide($this->_cPtr);
	}

	function HideWithEffect($effect,$timeout=0) {
		return wxWindow_HideWithEffect($this->_cPtr,$effect,$timeout);
	}

	function IsEnabled() {
		return wxWindow_IsEnabled($this->_cPtr);
	}

	function IsExposed($x_or_pt_or_rect,$y=null,$w=null,$h=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_IsExposed($this->_cPtr,$x_or_pt_or_rect); break;
		case 2: $r=wxWindow_IsExposed($this->_cPtr,$x_or_pt_or_rect,$y); break;
		case 3: $r=wxWindow_IsExposed($this->_cPtr,$x_or_pt_or_rect,$y,$w); break;
		default: $r=wxWindow_IsExposed($this->_cPtr,$x_or_pt_or_rect,$y,$w,$h);
		}
		return $r;
	}

	function IsShown() {
		return wxWindow_IsShown($this->_cPtr);
	}

	function IsShownOnScreen() {
		return wxWindow_IsShownOnScreen($this->_cPtr);
	}

	function Disable() {
		return wxWindow_Disable($this->_cPtr);
	}

	function Enable($enable=true) {
		return wxWindow_Enable($this->_cPtr,$enable);
	}

	function Show($show=true) {
		return wxWindow_Show($this->_cPtr,$show);
	}

	function ShowWithEffect($effect,$timeout=0) {
		return wxWindow_ShowWithEffect($this->_cPtr,$effect,$timeout);
	}

	function GetHelpText() {
		return wxWindow_GetHelpText($this->_cPtr);
	}

	function SetHelpText($helpText) {
		wxWindow_SetHelpText($this->_cPtr,$helpText);
	}

	function GetHelpTextAtPoint($point,$origin) {
		return wxWindow_GetHelpTextAtPoint($this->_cPtr,$point,$origin);
	}

	function GetToolTip() {
		return wxWindow_GetToolTip($this->_cPtr);
	}

	function GetToolTipText() {
		return wxWindow_GetToolTipText($this->_cPtr);
	}

	function SetToolTip($tipString_or_tip) {
		wxWindow_SetToolTip($this->_cPtr,$tipString_or_tip);
	}

	function UnsetToolTip() {
		wxWindow_UnsetToolTip($this->_cPtr);
	}

	function GetPopupMenuSelectionFromUser($menu,$pos_or_x=null,$y=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_GetPopupMenuSelectionFromUser($this->_cPtr,$menu); break;
		case 2: $r=wxWindow_GetPopupMenuSelectionFromUser($this->_cPtr,$menu,$pos_or_x); break;
		default: $r=wxWindow_GetPopupMenuSelectionFromUser($this->_cPtr,$menu,$pos_or_x,$y);
		}
		return $r;
	}

	function PopupMenu($menu,$pos_or_x=null,$y=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_PopupMenu($this->_cPtr,$menu); break;
		case 2: $r=wxWindow_PopupMenu($this->_cPtr,$menu,$pos_or_x); break;
		default: $r=wxWindow_PopupMenu($this->_cPtr,$menu,$pos_or_x,$y);
		}
		return $r;
	}

	function GetValidator() {
		return wxWindow_GetValidator($this->_cPtr);
	}

	function SetValidator($validator) {
		wxWindow_SetValidator($this->_cPtr,$validator);
	}

	function TransferDataFromWindow() {
		return wxWindow_TransferDataFromWindow($this->_cPtr);
	}

	function TransferDataToWindow() {
		return wxWindow_TransferDataToWindow($this->_cPtr);
	}

	function Validate() {
		return wxWindow_Validate($this->_cPtr);
	}

	function GetId() {
		return wxWindow_GetId($this->_cPtr);
	}

	function GetLabel() {
		return wxWindow_GetLabel($this->_cPtr);
	}

	function GetLayoutDirection() {
		return wxWindow_GetLayoutDirection($this->_cPtr);
	}

	function GetName() {
		return wxWindow_GetName($this->_cPtr);
	}

	function GetWindowVariant() {
		return wxWindow_GetWindowVariant($this->_cPtr);
	}

	function SetId($winid) {
		wxWindow_SetId($this->_cPtr,$winid);
	}

	function SetLabel($label) {
		wxWindow_SetLabel($this->_cPtr,$label);
	}

	function SetLayoutDirection($dir) {
		wxWindow_SetLayoutDirection($this->_cPtr,$dir);
	}

	function SetName($name) {
		wxWindow_SetName($this->_cPtr,$name);
	}

	function SetWindowVariant($variant) {
		wxWindow_SetWindowVariant($this->_cPtr,$variant);
	}

	function GetAcceleratorTable() {
		return wxWindow_GetAcceleratorTable($this->_cPtr);
	}

	function SetAcceleratorTable($accel) {
		wxWindow_SetAcceleratorTable($this->_cPtr,$accel);
	}

	function Close($force=false) {
		return wxWindow_Close($this->_cPtr,$force);
	}

	function Destroy() {
		return wxWindow_Destroy($this->_cPtr);
	}

	function IsBeingDeleted() {
		return wxWindow_IsBeingDeleted($this->_cPtr);
	}

	function GetDropTarget() {
		return wxWindow_GetDropTarget($this->_cPtr);
	}

	function SetDropTarget($target) {
		wxWindow_SetDropTarget($this->_cPtr,$target);
	}

	function DragAcceptFiles($accept) {
		wxWindow_DragAcceptFiles($this->_cPtr,$accept);
	}

	function GetContainingSizer() {
		return wxWindow_GetContainingSizer($this->_cPtr);
	}

	function GetSizer() {
		return wxWindow_GetSizer($this->_cPtr);
	}

	function SetSizer($sizer,$deleteOld=true) {
		wxWindow_SetSizer($this->_cPtr,$sizer,$deleteOld);
	}

	function SetSizerAndFit($sizer,$deleteOld=true) {
		wxWindow_SetSizerAndFit($this->_cPtr,$sizer,$deleteOld);
	}

	function GetConstraints() {
		return wxWindow_GetConstraints($this->_cPtr);
	}

	function SetConstraints($constraints) {
		wxWindow_SetConstraints($this->_cPtr,$constraints);
	}

	function Layout() {
		return wxWindow_Layout($this->_cPtr);
	}

	function SetAutoLayout($autoLayout) {
		wxWindow_SetAutoLayout($this->_cPtr,$autoLayout);
	}

	function GetAutoLayout() {
		return wxWindow_GetAutoLayout($this->_cPtr);
	}

	function CaptureMouse() {
		wxWindow_CaptureMouse($this->_cPtr);
	}

	function GetCaret() {
		return wxWindow_GetCaret($this->_cPtr);
	}

	function GetCursor() {
		return wxWindow_GetCursor($this->_cPtr);
	}

	function HasCapture() {
		return wxWindow_HasCapture($this->_cPtr);
	}

	function ReleaseMouse() {
		wxWindow_ReleaseMouse($this->_cPtr);
	}

	function SetCaret($caret) {
		wxWindow_SetCaret($this->_cPtr,$caret);
	}

	function SetCursor($cursor) {
		return wxWindow_SetCursor($this->_cPtr,$cursor);
	}

	function WarpPointer($x,$y) {
		wxWindow_WarpPointer($this->_cPtr,$x,$y);
	}

	function HitTest($x_or_pt,$y=null) {
		switch (func_num_args()) {
		case 1: $r=wxWindow_HitTest($this->_cPtr,$x_or_pt); break;
		default: $r=wxWindow_HitTest($this->_cPtr,$x_or_pt,$y);
		}
		return $r;
	}

	function GetBorder($flags=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetBorder($this->_cPtr); break;
		default: $r=wxWindow_GetBorder($this->_cPtr,$flags);
		}
		return $r;
	}

	function DoUpdateWindowUI($event) {
		wxWindow_DoUpdateWindowUI($this->_cPtr,$event);
	}

	function GetHandle() {
		return wxWindow_GetHandle($this->_cPtr);
	}

	function HasMultiplePages() {
		return wxWindow_HasMultiplePages($this->_cPtr);
	}

	function InheritAttributes() {
		wxWindow_InheritAttributes($this->_cPtr);
	}

	function InitDialog() {
		wxWindow_InitDialog($this->_cPtr);
	}

	function IsDoubleBuffered() {
		return wxWindow_IsDoubleBuffered($this->_cPtr);
	}

	function SetDoubleBuffered($on) {
		wxWindow_SetDoubleBuffered($this->_cPtr,$on);
	}

	function IsRetained() {
		return wxWindow_IsRetained($this->_cPtr);
	}

	function IsThisEnabled() {
		return wxWindow_IsThisEnabled($this->_cPtr);
	}

	function IsTopLevel() {
		return wxWindow_IsTopLevel($this->_cPtr);
	}

	function OnInternalIdle() {
		wxWindow_OnInternalIdle($this->_cPtr);
	}

	function UpdateWindowUI($flags=null) {
		switch (func_num_args()) {
		case 0: wxWindow_UpdateWindowUI($this->_cPtr); break;
		default: wxWindow_UpdateWindowUI($this->_cPtr,$flags);
		}
	}

	static function GetClassDefaultAttributes($variant=null) {
		switch (func_num_args()) {
		case 0: $r=wxWindow_GetClassDefaultAttributes(); break;
		default: $r=wxWindow_GetClassDefaultAttributes($variant);
		}
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxVisualAttributes($r);
		}
		return $r;
	}

	static function FindFocus() {
		$r=wxWindow_FindFocus();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	static function FindWindowById($id,$parent=null) {
		$r=wxWindow_FindWindowById($id,$parent);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_wxWindow': return new wxWindow($r);
		default: return new wxWindow($r);
		}
	}

	static function FindWindowByLabel($label,$parent=null) {
		$r=wxWindow_FindWindowByLabel($label,$parent);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_wxWindow': return new wxWindow($r);
		default: return new wxWindow($r);
		}
	}

	static function FindWindowByName($name,$parent=null) {
		$r=wxWindow_FindWindowByName($name,$parent);
		if (!is_resource($r)) return $r;
		switch (get_resource_type($r)) {
		case '_p_wxWindow': return new wxWindow($r);
		default: return new wxWindow($r);
		}
	}

	static function GetCapture() {
		$r=wxWindow_GetCapture();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	static function NewControlId($count=1) {
		return wxWindow_NewControlId($count);
	}

	static function UnreserveControlId($id,$count=1) {
		wxWindow_UnreserveControlId($id,$count);
	}
}

class wxNonOwnedWindow extends wxWindow {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		wxWindow::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return wxWindow::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return wxWindow::__get($var);
	}

	function SetShape($region_or_path) {
		return wxNonOwnedWindow_SetShape($this->_cPtr,$region_or_path);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_wxNonOwnedWindow') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_wxNonOwnedWindow();
	}
}

class wxTopLevelWindow extends wxNonOwnedWindow {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		wxNonOwnedWindow::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return wxNonOwnedWindow::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return wxNonOwnedWindow::__get($var);
	}

	function __construct($parent=null,$id=null,$title=null,$pos=null,$size=null,$style=null,$name=null) {
		if (is_resource($parent) && get_resource_type($parent) === '_p_wxTopLevelWindow') {
			$this->_cPtr=$parent;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_wxTopLevelWindow(); break;
		case 1: $this->_cPtr=new_wxTopLevelWindow($parent); break;
		case 2: $this->_cPtr=new_wxTopLevelWindow($parent,$id); break;
		case 3: $this->_cPtr=new_wxTopLevelWindow($parent,$id,$title); break;
		case 4: $this->_cPtr=new_wxTopLevelWindow($parent,$id,$title,$pos); break;
		case 5: $this->_cPtr=new_wxTopLevelWindow($parent,$id,$title,$pos,$size); break;
		case 6: $this->_cPtr=new_wxTopLevelWindow($parent,$id,$title,$pos,$size,$style); break;
		default: $this->_cPtr=new_wxTopLevelWindow($parent,$id,$title,$pos,$size,$style,$name);
		}
	}

	function Create($parent,$id,$title,$pos=null,$size=null,$style=null,$name=null) {
		switch (func_num_args()) {
		case 3: $r=wxTopLevelWindow_Create($this->_cPtr,$parent,$id,$title); break;
		case 4: $r=wxTopLevelWindow_Create($this->_cPtr,$parent,$id,$title,$pos); break;
		case 5: $r=wxTopLevelWindow_Create($this->_cPtr,$parent,$id,$title,$pos,$size); break;
		case 6: $r=wxTopLevelWindow_Create($this->_cPtr,$parent,$id,$title,$pos,$size,$style); break;
		default: $r=wxTopLevelWindow_Create($this->_cPtr,$parent,$id,$title,$pos,$size,$style,$name);
		}
		return $r;
	}

	function CanSetTransparent() {
		return wxTopLevelWindow_CanSetTransparent($this->_cPtr);
	}

	function CenterOnScreen($direction) {
		wxTopLevelWindow_CenterOnScreen($this->_cPtr,$direction);
	}

	function CentreOnScreen($direction=null) {
		switch (func_num_args()) {
		case 0: wxTopLevelWindow_CentreOnScreen($this->_cPtr); break;
		default: wxTopLevelWindow_CentreOnScreen($this->_cPtr,$direction);
		}
	}

	function EnableCloseButton($enable=true) {
		return wxTopLevelWindow_EnableCloseButton($this->_cPtr,$enable);
	}

	function GetDefaultItem() {
		$r=wxTopLevelWindow_GetDefaultItem($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	static function GetDefaultSize() {
		return wxTopLevelWindow_GetDefaultSize();
	}

	function GetIcon() {
		return wxTopLevelWindow_GetIcon($this->_cPtr);
	}

	function GetIcons() {
		return wxTopLevelWindow_GetIcons($this->_cPtr);
	}

	function GetTitle() {
		return wxTopLevelWindow_GetTitle($this->_cPtr);
	}

	function Iconize($iconize=true) {
		wxTopLevelWindow_Iconize($this->_cPtr,$iconize);
	}

	function IsActive() {
		return wxTopLevelWindow_IsActive($this->_cPtr);
	}

	function IsAlwaysMaximized() {
		return wxTopLevelWindow_IsAlwaysMaximized($this->_cPtr);
	}

	function IsFullScreen() {
		return wxTopLevelWindow_IsFullScreen($this->_cPtr);
	}

	function IsIconized() {
		return wxTopLevelWindow_IsIconized($this->_cPtr);
	}

	function IsMaximized() {
		return wxTopLevelWindow_IsMaximized($this->_cPtr);
	}

	function Layout() {
		return wxTopLevelWindow_Layout($this->_cPtr);
	}

	function Maximize($maximize=true) {
		wxTopLevelWindow_Maximize($this->_cPtr,$maximize);
	}

	function RequestUserAttention($flags=null) {
		switch (func_num_args()) {
		case 0: wxTopLevelWindow_RequestUserAttention($this->_cPtr); break;
		default: wxTopLevelWindow_RequestUserAttention($this->_cPtr,$flags);
		}
	}

	function SetDefaultItem($win) {
		$r=wxTopLevelWindow_SetDefaultItem($this->_cPtr,$win);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function SetTmpDefaultItem($win) {
		$r=wxTopLevelWindow_SetTmpDefaultItem($this->_cPtr,$win);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function GetTmpDefaultItem() {
		$r=wxTopLevelWindow_GetTmpDefaultItem($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new wxWindow($r);
		}
		return $r;
	}

	function SetIcon($icon) {
		wxTopLevelWindow_SetIcon($this->_cPtr,$icon);
	}

	function SetIcons($icons) {
		wxTopLevelWindow_SetIcons($this->_cPtr,$icons);
	}

	function SetMaxSize($size) {
		wxTopLevelWindow_SetMaxSize($this->_cPtr,$size);
	}

	function SetMinSize($size) {
		wxTopLevelWindow_SetMinSize($this->_cPtr,$size);
	}

	function SetSizeHints($minW_or_minSize,$minH_or_maxSize=null,$maxW_or_incSize=null,$maxH=null,$incW=null,$incH=null) {
		switch (func_num_args()) {
		case 1: wxTopLevelWindow_SetSizeHints($this->_cPtr,$minW_or_minSize); break;
		case 2: wxTopLevelWindow_SetSizeHints($this->_cPtr,$minW_or_minSize,$minH_or_maxSize); break;
		case 3: wxTopLevelWindow_SetSizeHints($this->_cPtr,$minW_or_minSize,$minH_or_maxSize,$maxW_or_incSize); break;
		case 4: wxTopLevelWindow_SetSizeHints($this->_cPtr,$minW_or_minSize,$minH_or_maxSize,$maxW_or_incSize,$maxH); break;
		case 5: wxTopLevelWindow_SetSizeHints($this->_cPtr,$minW_or_minSize,$minH_or_maxSize,$maxW_or_incSize,$maxH,$incW); break;
		default: wxTopLevelWindow_SetSizeHints($this->_cPtr,$minW_or_minSize,$minH_or_maxSize,$maxW_or_incSize,$maxH,$incW,$incH);
		}
	}

	function SetTitle($title) {
		wxTopLevelWindow_SetTitle($this->_cPtr,$title);
	}

	function SetTransparent($alpha) {
		return wxTopLevelWindow_SetTransparent($this->_cPtr,$alpha);
	}

	function ShouldPreventAppExit() {
		return wxTopLevelWindow_ShouldPreventAppExit($this->_cPtr);
	}

	function OSXSetModified($modified) {
		wxTopLevelWindow_OSXSetModified($this->_cPtr,$modified);
	}

	function OSXIsModified() {
		return wxTopLevelWindow_OSXIsModified($this->_cPtr);
	}

	function SetRepresentedFilename($filename) {
		wxTopLevelWindow_SetRepresentedFilename($this->_cPtr,$filename);
	}

	function ShowFullScreen($show,$style=null) {
		switch (func_num_args()) {
		case 1: $r=wxTopLevelWindow_ShowFullScreen($this->_cPtr,$show); break;
		default: $r=wxTopLevelWindow_ShowFullScreen($this->_cPtr,$show,$style);
		}
		return $r;
	}
}

class wxFrame extends wxTopLevelWindow {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_wxwidgets_alter_newobject($this->_cPtr,$value);
		wxTopLevelWindow::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return wxTopLevelWindow::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_wxwidgets_get_newobject($this->_cPtr);
		return wxTopLevelWindow::__get($var);
	}

	function __construct($parent=null,$id=null,$title=null,$pos=null,$size=null,$style=null,$name=null) {
		if (is_resource($parent) && get_resource_type($parent) === '_p_wxFrame') {
			$this->_cPtr=$parent;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_wxFrame(); break;
		case 1: $this->_cPtr=new_wxFrame($parent); break;
		case 2: $this->_cPtr=new_wxFrame($parent,$id); break;
		case 3: $this->_cPtr=new_wxFrame($parent,$id,$title); break;
		case 4: $this->_cPtr=new_wxFrame($parent,$id,$title,$pos); break;
		case 5: $this->_cPtr=new_wxFrame($parent,$id,$title,$pos,$size); break;
		case 6: $this->_cPtr=new_wxFrame($parent,$id,$title,$pos,$size,$style); break;
		default: $this->_cPtr=new_wxFrame($parent,$id,$title,$pos,$size,$style,$name);
		}
	}

	function Centre($direction=null) {
		switch (func_num_args()) {
		case 0: wxFrame_Centre($this->_cPtr); break;
		default: wxFrame_Centre($this->_cPtr,$direction);
		}
	}

	function Create($parent,$id,$title,$pos=null,$size=null,$style=null,$name=null) {
		switch (func_num_args()) {
		case 3: $r=wxFrame_Create($this->_cPtr,$parent,$id,$title); break;
		case 4: $r=wxFrame_Create($this->_cPtr,$parent,$id,$title,$pos); break;
		case 5: $r=wxFrame_Create($this->_cPtr,$parent,$id,$title,$pos,$size); break;
		case 6: $r=wxFrame_Create($this->_cPtr,$parent,$id,$title,$pos,$size,$style); break;
		default: $r=wxFrame_Create($this->_cPtr,$parent,$id,$title,$pos,$size,$style,$name);
		}
		return $r;
	}

	function CreateStatusBar($number=1,$style=null,$id=null,$name=null) {
		switch (func_num_args()) {
		case 0: case 1: $r=wxFrame_CreateStatusBar($this->_cPtr,$number); break;
		case 2: $r=wxFrame_CreateStatusBar($this->_cPtr,$number,$style); break;
		case 3: $r=wxFrame_CreateStatusBar($this->_cPtr,$number,$style,$id); break;
		default: $r=wxFrame_CreateStatusBar($this->_cPtr,$number,$style,$id,$name);
		}
		return $r;
	}

	function CreateToolBar($style=null,$id=null,$name=null) {
		switch (func_num_args()) {
		case 0: $r=wxFrame_CreateToolBar($this->_cPtr); break;
		case 1: $r=wxFrame_CreateToolBar($this->_cPtr,$style); break;
		case 2: $r=wxFrame_CreateToolBar($this->_cPtr,$style,$id); break;
		default: $r=wxFrame_CreateToolBar($this->_cPtr,$style,$id,$name);
		}
		return $r;
	}

	function GetClientAreaOrigin() {
		return wxFrame_GetClientAreaOrigin($this->_cPtr);
	}

	function GetMenuBar() {
		return wxFrame_GetMenuBar($this->_cPtr);
	}

	function GetStatusBar() {
		return wxFrame_GetStatusBar($this->_cPtr);
	}

	function GetStatusBarPane() {
		return wxFrame_GetStatusBarPane($this->_cPtr);
	}

	function GetToolBar() {
		return wxFrame_GetToolBar($this->_cPtr);
	}

	function OnCreateStatusBar($number,$style,$id,$name) {
		return wxFrame_OnCreateStatusBar($this->_cPtr,$number,$style,$id,$name);
	}

	function OnCreateToolBar($style,$id,$name) {
		return wxFrame_OnCreateToolBar($this->_cPtr,$style,$id,$name);
	}

	function ProcessCommand($id) {
		return wxFrame_ProcessCommand($this->_cPtr,$id);
	}

	function SetMenuBar($menuBar) {
		wxFrame_SetMenuBar($this->_cPtr,$menuBar);
	}

	function SetStatusBar($statusBar) {
		wxFrame_SetStatusBar($this->_cPtr,$statusBar);
	}

	function SetStatusBarPane($n) {
		wxFrame_SetStatusBarPane($this->_cPtr,$n);
	}

	function SetStatusText($text,$number=0) {
		wxFrame_SetStatusText($this->_cPtr,$text,$number);
	}

	function SetStatusWidths($n,$widths_field) {
		wxFrame_SetStatusWidths($this->_cPtr,$n,$widths_field);
	}

	function SetToolBar($toolBar) {
		wxFrame_SetToolBar($this->_cPtr,$toolBar);
	}

	function PushStatusText($text,$number=0) {
		wxFrame_PushStatusText($this->_cPtr,$text,$number);
	}

	function PopStatusText($number=0) {
		wxFrame_PopStatusText($this->_cPtr,$number);
	}
}


?>
