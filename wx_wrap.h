/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_WXWIDGETS_WRAP_H_
#define SWIG_WXWIDGETS_WRAP_H_

class SwigDirector_wxAppConsole : public wxAppConsole, public Swig::Director {

public:
    SwigDirector_wxAppConsole(zval *self TSRMLS_DC);
    virtual wxAppTraits *CreateTraits();
    virtual wxAppTraits *CreateTraitsSwigPublic() {
      return wxAppConsole::CreateTraits();
    }
    virtual ~SwigDirector_wxAppConsole();
    virtual int MainLoop();
    virtual void ExitMainLoop();
    virtual int FilterEvent(wxEvent &event);
    virtual void HandleEvent(wxEvtHandler *handler, wxEventFunction func, wxEvent &event) const;
    virtual bool UsesEventLoop() const;
    virtual void ProcessPendingEvents();
    virtual void OnAssertFailure(wxChar const *file, int line, wxChar const *func, wxChar const *cond, wxChar const *msg);
    virtual bool OnCmdLineError(wxCmdLineParser &parser);
    virtual bool OnCmdLineHelp(wxCmdLineParser &parser);
    virtual bool OnCmdLineParsed(wxCmdLineParser &parser);
    virtual void OnEventLoopEnter(wxEventLoopBase *loop);
    virtual void OnEventLoopExit(wxEventLoopBase *loop);
    virtual bool OnExceptionInMainLoop();
    virtual int OnExit();
    virtual void OnFatalException();
    virtual bool OnInit();
    virtual void OnInitCmdLine(wxCmdLineParser &parser);
    virtual int OnRun();
    virtual void OnUnhandledException();
};
class SwigDirector_wxApp : public wxApp, public Swig::Director {

public:
    SwigDirector_wxApp(zval *self TSRMLS_DC);
    virtual wxAppTraits *CreateTraits();
    virtual wxAppTraits *CreateTraitsSwigPublic() {
      return wxAppConsole::CreateTraits();
    }
    virtual ~SwigDirector_wxApp();
    virtual int MainLoop();
    virtual void ExitMainLoop();
    virtual int FilterEvent(wxEvent &event);
    virtual void HandleEvent(wxEvtHandler *handler, wxEventFunction func, wxEvent &event) const;
    virtual bool UsesEventLoop() const;
    virtual void ProcessPendingEvents();
    virtual void OnAssertFailure(wxChar const *file, int line, wxChar const *func, wxChar const *cond, wxChar const *msg);
    virtual bool OnCmdLineError(wxCmdLineParser &parser);
    virtual bool OnCmdLineHelp(wxCmdLineParser &parser);
    virtual bool OnCmdLineParsed(wxCmdLineParser &parser);
    virtual void OnEventLoopEnter(wxEventLoopBase *loop);
    virtual void OnEventLoopExit(wxEventLoopBase *loop);
    virtual bool OnExceptionInMainLoop();
    virtual int OnExit();
    virtual void OnFatalException();
    virtual bool OnInit();
    virtual void OnInitCmdLine(wxCmdLineParser &parser);
    virtual int OnRun();
    virtual void OnUnhandledException();
    virtual wxVideoMode GetDisplayMode() const;
    virtual wxLayoutDirection GetLayoutDirection() const;
    virtual wxWindow *GetTopWindow() const;
    virtual bool IsActive() const;
    virtual bool SafeYield(wxWindow *win, bool onlyIfNeeded);
    virtual bool SafeYieldFor(wxWindow *win, long eventsToProcess);
    virtual bool SetDisplayMode(wxVideoMode const &info);
    virtual bool SetNativeTheme(wxString const &theme);
};
class SwigDirector_wxWindow : public wxWindow, public Swig::Director {

public:
    SwigDirector_wxWindow(zval *self TSRMLS_DC);
    SwigDirector_wxWindow(zval *self, wxWindow *parent, wxWindowID id, wxPoint const &pos = wxDefaultPosition, wxSize const &size = wxDefaultSize, long style = 0, wxString const &name = wxPanelNameStr TSRMLS_DC);
    virtual ~SwigDirector_wxWindow();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool HasFocus() const;
    virtual void SetCanFocus(bool canFocus);
    virtual void SetFocus();
    virtual void SetFocusFromKbd();
    virtual void AddChild(wxWindow *child);
    virtual void RemoveChild(wxWindow *child);
    virtual bool Reparent(wxWindow *newParent);
    virtual void AlwaysShowScrollbars(bool hflag = true, bool vflag = true);
    virtual int GetScrollPos(int orientation) const;
    virtual int GetScrollRange(int orientation) const;
    virtual int GetScrollThumb(int orientation) const;
    virtual bool IsScrollbarAlwaysShown(int orient) const;
    virtual bool ScrollLines(int lines);
    virtual bool ScrollPages(int pages);
    virtual void ScrollWindow(int dx, int dy, wxRect const *rect = NULL);
    virtual void SetScrollPos(int orientation, int pos, bool refresh = true);
    virtual void SetScrollbar(int orientation, int position, int thumbSize, int range, bool refresh = true);
    virtual wxSize ClientToWindowSize(wxSize const &size) const;
    virtual wxSize WindowToClientSize(wxSize const &size) const;
    virtual void Fit();
    virtual void FitInside();
    virtual wxSize GetEffectiveMinSize() const;
    virtual wxSize GetMaxClientSize() const;
    virtual wxSize GetMaxSize() const;
    virtual wxSize GetMinClientSize() const;
    virtual wxSize GetMinSize() const;
    virtual wxSize GetBestVirtualSize() const;
    virtual wxSize GetWindowBorderSize() const;
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SendSizeEvent(int flags = 0);
    virtual void SetMaxClientSize(wxSize const &size);
    virtual void SetMaxSize(wxSize const &size);
    virtual void SetMinClientSize(wxSize const &size);
    virtual void SetMinSize(wxSize const &size);
    virtual void SetSizeHints(wxSize const &minSize, wxSize const &maxSize = wxDefaultSize, wxSize const &incSize = wxDefaultSize);
    virtual void SetSizeHints(int minW, int minH, int maxW = -1, int maxH = -1, int incW = -1, int incH = -1);
    virtual wxPoint GetClientAreaOrigin() const;
    virtual void ClearBackground();
    virtual wxBackgroundStyle GetBackgroundStyle() const;
    virtual int GetCharHeight() const;
    virtual int GetCharWidth() const;
    virtual wxVisualAttributes GetDefaultAttributes() const;
    virtual bool HasTransparentBackground();
    virtual void Refresh(bool eraseBackground = true, wxRect const *rect = NULL);
    virtual void Update();
    virtual bool SetBackgroundColour(wxColour const &colour);
    virtual bool SetBackgroundStyle(wxBackgroundStyle style);
    virtual bool IsTransparentBackgroundSupported(wxString *reason = NULL) const;
    virtual bool SetFont(wxFont const &font);
    virtual bool SetForegroundColour(wxColour const &colour);
    virtual bool ShouldInheritColours() const;
    virtual void SetThemeEnabled(bool enable);
    virtual bool GetThemeEnabled() const;
    virtual bool CanSetTransparent();
    virtual bool SetTransparent(wxByte alpha);
    virtual void SetNextHandler(wxEvtHandler *handler);
    virtual void SetPreviousHandler(wxEvtHandler *handler);
    virtual long GetWindowStyleFlag() const;
    virtual void SetExtraStyle(long exStyle);
    virtual void SetWindowStyleFlag(long style);
    virtual void Lower();
    virtual void Raise();
    virtual bool HideWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual bool IsShown() const;
    virtual bool IsShownOnScreen() const;
    virtual bool Enable(bool enable = true);
    virtual bool Show(bool show = true);
    virtual bool ShowWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual wxString GetHelpTextAtPoint(wxPoint const &point, wxHelpEvent::Origin origin) const;
    virtual wxValidator *GetValidator();
    virtual void SetValidator(wxValidator const &validator);
    virtual bool TransferDataFromWindow();
    virtual bool TransferDataToWindow();
    virtual bool Validate();
    virtual wxString GetLabel() const;
    virtual wxLayoutDirection GetLayoutDirection() const;
    virtual wxString GetName() const;
    virtual void SetLabel(wxString const &label);
    virtual void SetLayoutDirection(wxLayoutDirection dir);
    virtual void SetName(wxString const &name);
    virtual void SetAcceleratorTable(wxAcceleratorTable const &accel);
    virtual bool Destroy();
    virtual wxDropTarget *GetDropTarget() const;
    virtual void SetDropTarget(wxDropTarget *target);
    virtual void DragAcceptFiles(bool accept);
    virtual bool Layout();
    virtual bool HasCapture() const;
    virtual bool SetCursor(wxCursor const &cursor);
    virtual void WarpPointer(int x, int y);
    virtual void DoUpdateWindowUI(wxUpdateUIEvent &event);
    virtual WXWidget GetHandle() const;
    virtual bool HasMultiplePages() const;
    virtual void InheritAttributes();
    virtual void InitDialog();
    virtual bool IsDoubleBuffered() const;
    virtual bool IsRetained() const;
    virtual bool IsTopLevel() const;
    virtual void OnInternalIdle();
    virtual void UpdateWindowUI(long flags = wxUPDATE_UI_NONE);
    virtual void DoCentre(int direction);
    virtual void DoCentreSwigPublic(int direction) {
      wxWindow::DoCentre(direction);
    }
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestSizeSwigPublic() const {
      return wxWindow::DoGetBestSize();
    }
    virtual wxSize DoGetBestClientSize() const;
    virtual wxSize DoGetBestClientSizeSwigPublic() const {
      return wxWindow::DoGetBestClientSize();
    }
    virtual int DoGetBestClientHeight(int width) const;
    virtual int DoGetBestClientHeightSwigPublic(int width) const {
      return wxWindow::DoGetBestClientHeight(width);
    }
    virtual int DoGetBestClientWidth(int height) const;
    virtual int DoGetBestClientWidthSwigPublic(int height) const {
      return wxWindow::DoGetBestClientWidth(height);
    }
    virtual void SetInitialBestSize(wxSize const &size);
    virtual void SetInitialBestSizeSwigPublic(wxSize const &size) {
      wxWindow::SetInitialBestSize(size);
    }
    virtual bool ProcessEvent(wxEvent &event);
    virtual bool ProcessEventSwigPublic(wxEvent &event) {
      return wxWindow::ProcessEvent(event);
    }
    virtual void QueueEvent(wxEvent *event);
    virtual void QueueEventSwigPublic(wxEvent *event) {
      wxWindow::QueueEvent(event);
    }
    virtual void AddPendingEvent(wxEvent const &event);
    virtual void AddPendingEventSwigPublic(wxEvent const &event) {
      wxWindow::AddPendingEvent(event);
    }
};
class SwigDirector_wxNonOwnedWindow : public wxNonOwnedWindow, public Swig::Director {

public:
    SwigDirector_wxNonOwnedWindow(zval *self TSRMLS_DC);
    virtual ~SwigDirector_wxNonOwnedWindow();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool HasFocus() const;
    virtual void SetCanFocus(bool canFocus);
    virtual void SetFocus();
    virtual void SetFocusFromKbd();
    virtual void AddChild(wxWindow *child);
    virtual void RemoveChild(wxWindow *child);
    virtual bool Reparent(wxWindow *newParent);
    virtual void AlwaysShowScrollbars(bool hflag = true, bool vflag = true);
    virtual int GetScrollPos(int orientation) const;
    virtual int GetScrollRange(int orientation) const;
    virtual int GetScrollThumb(int orientation) const;
    virtual bool IsScrollbarAlwaysShown(int orient) const;
    virtual bool ScrollLines(int lines);
    virtual bool ScrollPages(int pages);
    virtual void ScrollWindow(int dx, int dy, wxRect const *rect = NULL);
    virtual void SetScrollPos(int orientation, int pos, bool refresh = true);
    virtual void SetScrollbar(int orientation, int position, int thumbSize, int range, bool refresh = true);
    virtual wxSize ClientToWindowSize(wxSize const &size) const;
    virtual wxSize WindowToClientSize(wxSize const &size) const;
    virtual void Fit();
    virtual void FitInside();
    virtual wxSize GetEffectiveMinSize() const;
    virtual wxSize GetMaxClientSize() const;
    virtual wxSize GetMaxSize() const;
    virtual wxSize GetMinClientSize() const;
    virtual wxSize GetMinSize() const;
    virtual wxSize GetBestVirtualSize() const;
    virtual wxSize GetWindowBorderSize() const;
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SendSizeEvent(int flags = 0);
    virtual void SetMaxClientSize(wxSize const &size);
    virtual void SetMaxSize(wxSize const &size);
    virtual void SetMinClientSize(wxSize const &size);
    virtual void SetMinSize(wxSize const &size);
    virtual void SetSizeHints(wxSize const &minSize, wxSize const &maxSize = wxDefaultSize, wxSize const &incSize = wxDefaultSize);
    virtual void SetSizeHints(int minW, int minH, int maxW = -1, int maxH = -1, int incW = -1, int incH = -1);
    virtual wxPoint GetClientAreaOrigin() const;
    virtual void ClearBackground();
    virtual wxBackgroundStyle GetBackgroundStyle() const;
    virtual int GetCharHeight() const;
    virtual int GetCharWidth() const;
    virtual wxVisualAttributes GetDefaultAttributes() const;
    virtual bool HasTransparentBackground();
    virtual void Refresh(bool eraseBackground = true, wxRect const *rect = NULL);
    virtual void Update();
    virtual bool SetBackgroundColour(wxColour const &colour);
    virtual bool SetBackgroundStyle(wxBackgroundStyle style);
    virtual bool IsTransparentBackgroundSupported(wxString *reason = NULL) const;
    virtual bool SetFont(wxFont const &font);
    virtual bool SetForegroundColour(wxColour const &colour);
    virtual bool ShouldInheritColours() const;
    virtual void SetThemeEnabled(bool enable);
    virtual bool GetThemeEnabled() const;
    virtual bool CanSetTransparent();
    virtual bool SetTransparent(wxByte alpha);
    virtual void SetNextHandler(wxEvtHandler *handler);
    virtual void SetPreviousHandler(wxEvtHandler *handler);
    virtual long GetWindowStyleFlag() const;
    virtual void SetExtraStyle(long exStyle);
    virtual void SetWindowStyleFlag(long style);
    virtual void Lower();
    virtual void Raise();
    virtual bool HideWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual bool IsShown() const;
    virtual bool IsShownOnScreen() const;
    virtual bool Enable(bool enable = true);
    virtual bool Show(bool show = true);
    virtual bool ShowWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual wxString GetHelpTextAtPoint(wxPoint const &point, wxHelpEvent::Origin origin) const;
    virtual wxValidator *GetValidator();
    virtual void SetValidator(wxValidator const &validator);
    virtual bool TransferDataFromWindow();
    virtual bool TransferDataToWindow();
    virtual bool Validate();
    virtual wxString GetLabel() const;
    virtual wxLayoutDirection GetLayoutDirection() const;
    virtual wxString GetName() const;
    virtual void SetLabel(wxString const &label);
    virtual void SetLayoutDirection(wxLayoutDirection dir);
    virtual void SetName(wxString const &name);
    virtual void SetAcceleratorTable(wxAcceleratorTable const &accel);
    virtual bool Destroy();
    virtual wxDropTarget *GetDropTarget() const;
    virtual void SetDropTarget(wxDropTarget *target);
    virtual void DragAcceptFiles(bool accept);
    virtual bool Layout();
    virtual bool HasCapture() const;
    virtual bool SetCursor(wxCursor const &cursor);
    virtual void WarpPointer(int x, int y);
    virtual void DoUpdateWindowUI(wxUpdateUIEvent &event);
    virtual WXWidget GetHandle() const;
    virtual bool HasMultiplePages() const;
    virtual void InheritAttributes();
    virtual void InitDialog();
    virtual bool IsDoubleBuffered() const;
    virtual bool IsRetained() const;
    virtual bool IsTopLevel() const;
    virtual void OnInternalIdle();
    virtual void UpdateWindowUI(long flags = wxUPDATE_UI_NONE);
    virtual void DoCentre(int direction);
    virtual void DoCentreSwigPublic(int direction) {
      wxWindow::DoCentre(direction);
    }
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestSizeSwigPublic() const {
      return wxWindow::DoGetBestSize();
    }
    virtual wxSize DoGetBestClientSize() const;
    virtual wxSize DoGetBestClientSizeSwigPublic() const {
      return wxWindow::DoGetBestClientSize();
    }
    virtual int DoGetBestClientHeight(int width) const;
    virtual int DoGetBestClientHeightSwigPublic(int width) const {
      return wxWindow::DoGetBestClientHeight(width);
    }
    virtual int DoGetBestClientWidth(int height) const;
    virtual int DoGetBestClientWidthSwigPublic(int height) const {
      return wxWindow::DoGetBestClientWidth(height);
    }
    virtual void SetInitialBestSize(wxSize const &size);
    virtual void SetInitialBestSizeSwigPublic(wxSize const &size) {
      wxWindow::SetInitialBestSize(size);
    }
    virtual bool ProcessEvent(wxEvent &event);
    virtual bool ProcessEventSwigPublic(wxEvent &event) {
      return wxWindow::ProcessEvent(event);
    }
    virtual void QueueEvent(wxEvent *event);
    virtual void QueueEventSwigPublic(wxEvent *event) {
      wxWindow::QueueEvent(event);
    }
    virtual void AddPendingEvent(wxEvent const &event);
    virtual void AddPendingEventSwigPublic(wxEvent const &event) {
      wxWindow::AddPendingEvent(event);
    }
};
class SwigDirector_wxTopLevelWindow : public wxTopLevelWindow, public Swig::Director {

public:
    SwigDirector_wxTopLevelWindow(zval *self TSRMLS_DC);
    SwigDirector_wxTopLevelWindow(zval *self, wxWindow *parent, wxWindowID id, wxString const &title, wxPoint const &pos = wxDefaultPosition, wxSize const &size = wxDefaultSize, long style = (wxSYSTEM_MENU|wxRESIZE_BORDER|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX|wxCAPTION|wxCLIP_CHILDREN), wxString const &name = wxFrameNameStr TSRMLS_DC);
    virtual ~SwigDirector_wxTopLevelWindow();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool HasFocus() const;
    virtual void SetCanFocus(bool canFocus);
    virtual void SetFocus();
    virtual void SetFocusFromKbd();
    virtual void AddChild(wxWindow *child);
    virtual void RemoveChild(wxWindow *child);
    virtual bool Reparent(wxWindow *newParent);
    virtual void AlwaysShowScrollbars(bool hflag = true, bool vflag = true);
    virtual int GetScrollPos(int orientation) const;
    virtual int GetScrollRange(int orientation) const;
    virtual int GetScrollThumb(int orientation) const;
    virtual bool IsScrollbarAlwaysShown(int orient) const;
    virtual bool ScrollLines(int lines);
    virtual bool ScrollPages(int pages);
    virtual void ScrollWindow(int dx, int dy, wxRect const *rect = NULL);
    virtual void SetScrollPos(int orientation, int pos, bool refresh = true);
    virtual void SetScrollbar(int orientation, int position, int thumbSize, int range, bool refresh = true);
    virtual wxSize ClientToWindowSize(wxSize const &size) const;
    virtual wxSize WindowToClientSize(wxSize const &size) const;
    virtual void Fit();
    virtual void FitInside();
    virtual wxSize GetEffectiveMinSize() const;
    virtual wxSize GetMaxClientSize() const;
    virtual wxSize GetMaxSize() const;
    virtual wxSize GetMinClientSize() const;
    virtual wxSize GetMinSize() const;
    virtual wxSize GetBestVirtualSize() const;
    virtual wxSize GetWindowBorderSize() const;
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SendSizeEvent(int flags = 0);
    virtual void SetMaxClientSize(wxSize const &size);
    virtual void SetMaxSize(wxSize const &size);
    virtual void SetMinClientSize(wxSize const &size);
    virtual void SetMinSize(wxSize const &size);
    virtual void SetSizeHints(wxSize const &minSize, wxSize const &maxSize = wxDefaultSize, wxSize const &incSize = wxDefaultSize);
    virtual void SetSizeHints(int minW, int minH, int maxW = -1, int maxH = -1, int incW = -1, int incH = -1);
    virtual wxPoint GetClientAreaOrigin() const;
    virtual void ClearBackground();
    virtual wxBackgroundStyle GetBackgroundStyle() const;
    virtual int GetCharHeight() const;
    virtual int GetCharWidth() const;
    virtual wxVisualAttributes GetDefaultAttributes() const;
    virtual bool HasTransparentBackground();
    virtual void Refresh(bool eraseBackground = true, wxRect const *rect = NULL);
    virtual void Update();
    virtual bool SetBackgroundColour(wxColour const &colour);
    virtual bool SetBackgroundStyle(wxBackgroundStyle style);
    virtual bool IsTransparentBackgroundSupported(wxString *reason = NULL) const;
    virtual bool SetFont(wxFont const &font);
    virtual bool SetForegroundColour(wxColour const &colour);
    virtual bool ShouldInheritColours() const;
    virtual void SetThemeEnabled(bool enable);
    virtual bool GetThemeEnabled() const;
    virtual bool CanSetTransparent();
    virtual bool SetTransparent(wxByte alpha);
    virtual void SetNextHandler(wxEvtHandler *handler);
    virtual void SetPreviousHandler(wxEvtHandler *handler);
    virtual long GetWindowStyleFlag() const;
    virtual void SetExtraStyle(long exStyle);
    virtual void SetWindowStyleFlag(long style);
    virtual void Lower();
    virtual void Raise();
    virtual bool HideWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual bool IsShown() const;
    virtual bool IsShownOnScreen() const;
    virtual bool Enable(bool enable = true);
    virtual bool Show(bool show = true);
    virtual bool ShowWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual wxString GetHelpTextAtPoint(wxPoint const &point, wxHelpEvent::Origin origin) const;
    virtual wxValidator *GetValidator();
    virtual void SetValidator(wxValidator const &validator);
    virtual bool TransferDataFromWindow();
    virtual bool TransferDataToWindow();
    virtual bool Validate();
    virtual wxString GetLabel() const;
    virtual wxLayoutDirection GetLayoutDirection() const;
    virtual wxString GetName() const;
    virtual void SetLabel(wxString const &label);
    virtual void SetLayoutDirection(wxLayoutDirection dir);
    virtual void SetName(wxString const &name);
    virtual void SetAcceleratorTable(wxAcceleratorTable const &accel);
    virtual bool Destroy();
    virtual wxDropTarget *GetDropTarget() const;
    virtual void SetDropTarget(wxDropTarget *target);
    virtual void DragAcceptFiles(bool accept);
    virtual bool Layout();
    virtual bool HasCapture() const;
    virtual bool SetCursor(wxCursor const &cursor);
    virtual void WarpPointer(int x, int y);
    virtual void DoUpdateWindowUI(wxUpdateUIEvent &event);
    virtual WXWidget GetHandle() const;
    virtual bool HasMultiplePages() const;
    virtual void InheritAttributes();
    virtual void InitDialog();
    virtual bool IsDoubleBuffered() const;
    virtual bool IsRetained() const;
    virtual bool IsTopLevel() const;
    virtual void OnInternalIdle();
    virtual void UpdateWindowUI(long flags = wxUPDATE_UI_NONE);
    virtual void DoCentre(int direction);
    virtual void DoCentreSwigPublic(int direction) {
      wxWindow::DoCentre(direction);
    }
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestSizeSwigPublic() const {
      return wxWindow::DoGetBestSize();
    }
    virtual wxSize DoGetBestClientSize() const;
    virtual wxSize DoGetBestClientSizeSwigPublic() const {
      return wxWindow::DoGetBestClientSize();
    }
    virtual int DoGetBestClientHeight(int width) const;
    virtual int DoGetBestClientHeightSwigPublic(int width) const {
      return wxWindow::DoGetBestClientHeight(width);
    }
    virtual int DoGetBestClientWidth(int height) const;
    virtual int DoGetBestClientWidthSwigPublic(int height) const {
      return wxWindow::DoGetBestClientWidth(height);
    }
    virtual void SetInitialBestSize(wxSize const &size);
    virtual void SetInitialBestSizeSwigPublic(wxSize const &size) {
      wxWindow::SetInitialBestSize(size);
    }
    virtual bool ProcessEvent(wxEvent &event);
    virtual bool ProcessEventSwigPublic(wxEvent &event) {
      return wxWindow::ProcessEvent(event);
    }
    virtual void QueueEvent(wxEvent *event);
    virtual void QueueEventSwigPublic(wxEvent *event) {
      wxWindow::QueueEvent(event);
    }
    virtual void AddPendingEvent(wxEvent const &event);
    virtual void AddPendingEventSwigPublic(wxEvent const &event) {
      wxWindow::AddPendingEvent(event);
    }
    virtual bool EnableCloseButton(bool enable = true);
    virtual wxString GetTitle() const;
    virtual void Iconize(bool iconize = true);
    virtual bool IsActive();
    virtual bool IsAlwaysMaximized() const;
    virtual bool IsFullScreen() const;
    virtual bool IsIconized() const;
    virtual bool IsMaximized() const;
    virtual void Maximize(bool maximize = true);
    virtual void RequestUserAttention(int flags = wxUSER_ATTENTION_INFO);
    virtual void SetIcons(wxIconBundle const &icons);
    virtual void SetTitle(wxString const &title);
    virtual bool ShouldPreventAppExit() const;
    virtual void OSXSetModified(bool modified);
    virtual bool OSXIsModified() const;
    virtual void SetRepresentedFilename(wxString const &filename);
    virtual bool ShowFullScreen(bool show, long style = wxFULLSCREEN_ALL);
};
class SwigDirector_wxFrame : public wxFrame, public Swig::Director {

public:
    SwigDirector_wxFrame(zval *self TSRMLS_DC);
    SwigDirector_wxFrame(zval *self, wxWindow *parent, wxWindowID id, wxString const &title, wxPoint const &pos = wxDefaultPosition, wxSize const &size = wxDefaultSize, long style = (wxSYSTEM_MENU|wxRESIZE_BORDER|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX|wxCAPTION|wxCLIP_CHILDREN), wxString const &name = wxFrameNameStr TSRMLS_DC);
    virtual ~SwigDirector_wxFrame();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool HasFocus() const;
    virtual void SetCanFocus(bool canFocus);
    virtual void SetFocus();
    virtual void SetFocusFromKbd();
    virtual void AddChild(wxWindow *child);
    virtual void RemoveChild(wxWindow *child);
    virtual bool Reparent(wxWindow *newParent);
    virtual void AlwaysShowScrollbars(bool hflag = true, bool vflag = true);
    virtual int GetScrollPos(int orientation) const;
    virtual int GetScrollRange(int orientation) const;
    virtual int GetScrollThumb(int orientation) const;
    virtual bool IsScrollbarAlwaysShown(int orient) const;
    virtual bool ScrollLines(int lines);
    virtual bool ScrollPages(int pages);
    virtual void ScrollWindow(int dx, int dy, wxRect const *rect = NULL);
    virtual void SetScrollPos(int orientation, int pos, bool refresh = true);
    virtual void SetScrollbar(int orientation, int position, int thumbSize, int range, bool refresh = true);
    virtual wxSize ClientToWindowSize(wxSize const &size) const;
    virtual wxSize WindowToClientSize(wxSize const &size) const;
    virtual void Fit();
    virtual void FitInside();
    virtual wxSize GetEffectiveMinSize() const;
    virtual wxSize GetMaxClientSize() const;
    virtual wxSize GetMaxSize() const;
    virtual wxSize GetMinClientSize() const;
    virtual wxSize GetMinSize() const;
    virtual wxSize GetBestVirtualSize() const;
    virtual wxSize GetWindowBorderSize() const;
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SendSizeEvent(int flags = 0);
    virtual void SetMaxClientSize(wxSize const &size);
    virtual void SetMaxSize(wxSize const &size);
    virtual void SetMinClientSize(wxSize const &size);
    virtual void SetMinSize(wxSize const &size);
    virtual void SetSizeHints(wxSize const &minSize, wxSize const &maxSize = wxDefaultSize, wxSize const &incSize = wxDefaultSize);
    virtual void SetSizeHints(int minW, int minH, int maxW = -1, int maxH = -1, int incW = -1, int incH = -1);
    virtual wxPoint GetClientAreaOrigin() const;
    virtual void ClearBackground();
    virtual wxBackgroundStyle GetBackgroundStyle() const;
    virtual int GetCharHeight() const;
    virtual int GetCharWidth() const;
    virtual wxVisualAttributes GetDefaultAttributes() const;
    virtual bool HasTransparentBackground();
    virtual void Refresh(bool eraseBackground = true, wxRect const *rect = NULL);
    virtual void Update();
    virtual bool SetBackgroundColour(wxColour const &colour);
    virtual bool SetBackgroundStyle(wxBackgroundStyle style);
    virtual bool IsTransparentBackgroundSupported(wxString *reason = NULL) const;
    virtual bool SetFont(wxFont const &font);
    virtual bool SetForegroundColour(wxColour const &colour);
    virtual bool ShouldInheritColours() const;
    virtual void SetThemeEnabled(bool enable);
    virtual bool GetThemeEnabled() const;
    virtual bool CanSetTransparent();
    virtual bool SetTransparent(wxByte alpha);
    virtual void SetNextHandler(wxEvtHandler *handler);
    virtual void SetPreviousHandler(wxEvtHandler *handler);
    virtual long GetWindowStyleFlag() const;
    virtual void SetExtraStyle(long exStyle);
    virtual void SetWindowStyleFlag(long style);
    virtual void Lower();
    virtual void Raise();
    virtual bool HideWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual bool IsShown() const;
    virtual bool IsShownOnScreen() const;
    virtual bool Enable(bool enable = true);
    virtual bool Show(bool show = true);
    virtual bool ShowWithEffect(wxShowEffect effect, unsigned int timeout = 0);
    virtual wxString GetHelpTextAtPoint(wxPoint const &point, wxHelpEvent::Origin origin) const;
    virtual wxValidator *GetValidator();
    virtual void SetValidator(wxValidator const &validator);
    virtual bool TransferDataFromWindow();
    virtual bool TransferDataToWindow();
    virtual bool Validate();
    virtual wxString GetLabel() const;
    virtual wxLayoutDirection GetLayoutDirection() const;
    virtual wxString GetName() const;
    virtual void SetLabel(wxString const &label);
    virtual void SetLayoutDirection(wxLayoutDirection dir);
    virtual void SetName(wxString const &name);
    virtual void SetAcceleratorTable(wxAcceleratorTable const &accel);
    virtual bool Destroy();
    virtual wxDropTarget *GetDropTarget() const;
    virtual void SetDropTarget(wxDropTarget *target);
    virtual void DragAcceptFiles(bool accept);
    virtual bool Layout();
    virtual bool HasCapture() const;
    virtual bool SetCursor(wxCursor const &cursor);
    virtual void WarpPointer(int x, int y);
    virtual void DoUpdateWindowUI(wxUpdateUIEvent &event);
    virtual WXWidget GetHandle() const;
    virtual bool HasMultiplePages() const;
    virtual void InheritAttributes();
    virtual void InitDialog();
    virtual bool IsDoubleBuffered() const;
    virtual bool IsRetained() const;
    virtual bool IsTopLevel() const;
    virtual void OnInternalIdle();
    virtual void UpdateWindowUI(long flags = wxUPDATE_UI_NONE);
    virtual void DoCentre(int direction);
    virtual void DoCentreSwigPublic(int direction) {
      wxWindow::DoCentre(direction);
    }
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestSizeSwigPublic() const {
      return wxWindow::DoGetBestSize();
    }
    virtual wxSize DoGetBestClientSize() const;
    virtual wxSize DoGetBestClientSizeSwigPublic() const {
      return wxWindow::DoGetBestClientSize();
    }
    virtual int DoGetBestClientHeight(int width) const;
    virtual int DoGetBestClientHeightSwigPublic(int width) const {
      return wxWindow::DoGetBestClientHeight(width);
    }
    virtual int DoGetBestClientWidth(int height) const;
    virtual int DoGetBestClientWidthSwigPublic(int height) const {
      return wxWindow::DoGetBestClientWidth(height);
    }
    virtual void SetInitialBestSize(wxSize const &size);
    virtual void SetInitialBestSizeSwigPublic(wxSize const &size) {
      wxWindow::SetInitialBestSize(size);
    }
    virtual bool ProcessEvent(wxEvent &event);
    virtual bool ProcessEventSwigPublic(wxEvent &event) {
      return wxWindow::ProcessEvent(event);
    }
    virtual void QueueEvent(wxEvent *event);
    virtual void QueueEventSwigPublic(wxEvent *event) {
      wxWindow::QueueEvent(event);
    }
    virtual void AddPendingEvent(wxEvent const &event);
    virtual void AddPendingEventSwigPublic(wxEvent const &event) {
      wxWindow::AddPendingEvent(event);
    }
    virtual bool EnableCloseButton(bool enable = true);
    virtual wxString GetTitle() const;
    virtual void Iconize(bool iconize = true);
    virtual bool IsActive();
    virtual bool IsAlwaysMaximized() const;
    virtual bool IsFullScreen() const;
    virtual bool IsIconized() const;
    virtual bool IsMaximized() const;
    virtual void Maximize(bool maximize = true);
    virtual void RequestUserAttention(int flags = wxUSER_ATTENTION_INFO);
    virtual void SetIcons(wxIconBundle const &icons);
    virtual void SetTitle(wxString const &title);
    virtual bool ShouldPreventAppExit() const;
    virtual void OSXSetModified(bool modified);
    virtual bool OSXIsModified() const;
    virtual void SetRepresentedFilename(wxString const &filename);
    virtual bool ShowFullScreen(bool show, long style = wxFULLSCREEN_ALL);
    virtual wxStatusBar *CreateStatusBar(int number = 1, long style = wxSTB_DEFAULT_STYLE, wxWindowID id = 0, wxString const &name = wxStatusBarNameStr);
    virtual wxToolBar *CreateToolBar(long style = wxBORDER_NONE|wxTB_HORIZONTAL, wxWindowID id = wxID_ANY, wxString const &name = wxToolBarNameStr);
    virtual wxMenuBar *GetMenuBar() const;
    virtual wxStatusBar *GetStatusBar() const;
    virtual wxToolBar *GetToolBar() const;
    virtual wxStatusBar *OnCreateStatusBar(int number, long style, wxWindowID id, wxString const &name);
    virtual wxToolBar *OnCreateToolBar(long style, wxWindowID id, wxString const &name);
    virtual void SetMenuBar(wxMenuBar *menuBar);
    virtual void SetStatusBar(wxStatusBar *statusBar);
    virtual void SetStatusText(wxString const &text, int number = 0);
    virtual void SetStatusWidths(int n, int const *widths_field);
    virtual void SetToolBar(wxToolBar *toolBar);
};

#endif
